version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  #aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
   # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli 
    steps:
      - checkout
      - run:
          name: Create cloudformation stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
            --region us-east-1

  
  configure_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["59:ed:ea:cf:01:4f:53:bf:4d:3c:8e:46:68:22:c6:89"] 
      - run:
          name: Install Ansible
          command: |
            yum update
            amazon-linux-extras list | grep ansible2
            amazon-linux-extras enable ansible2
            yum install -y ansible
      

      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main.yml

 # Exercise: Smoke Testing
  smoke_test:
    docker:
        - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
           # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment   

# Sequential workflow
workflows:
  # Name the workflow
  jagaWorkflow:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
             - create_infrastructure
      #- create_infrastructure
      #- configure_infrastructure:
          #requires:
            #- create_infrastructure
   
      
    

